/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.iot.data.schema;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DevInfoContextData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5081926116489545350L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DevInfoContextData\",\"namespace\":\"com.iot.data.schema\",\"fields\":[{\"name\":\"appBuild\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AppBuildData\",\"fields\":[{\"name\":\"packageName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"versionCode\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"versionName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"device\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DeviceData\",\"fields\":[{\"name\":\"sdkVersion\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"releaseVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deviceBrand\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deviceManufacturer\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deviceModel\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deviceBoard\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deviceProduct\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"locale\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LocaleData\",\"fields\":[{\"name\":\"deviceCountry\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deviceLanguage\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LocationData\",\"fields\":[{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"speed\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null},{\"name\":\"telephone\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TelephoneData\",\"fields\":[{\"name\":\"phoneCarrier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phoneRadio\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"inRoaming\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"wifi\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"default\":null,\"namespace\":\"com.iot.data.schema\"},{\"name\":\"bluetoothInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BluetoothInfoData\",\"fields\":[{\"name\":\"bluetoothStatus\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}],\"default\":null},{\"name\":\"availableMemoryInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AvailableMemoryInfoData\",\"fields\":[{\"name\":\"availableRAM\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"availableStorage\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"cpuInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CpuInfoData\",\"fields\":[{\"name\":\"cpuTotal\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cpuIdle\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cpuUsage\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null},{\"name\":\"USER_AGENT_ACTION\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"UserAgentActionData\",\"fields\":[{\"name\":\"userAgent\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.iot.data.schema.AppBuildData appBuild;
  @Deprecated public com.iot.data.schema.DeviceData device;
  @Deprecated public com.iot.data.schema.LocaleData locale;
  @Deprecated public com.iot.data.schema.LocationData location;
  @Deprecated public com.iot.data.schema.TelephoneData telephone;
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> wifi;
  @Deprecated public com.iot.data.schema.BluetoothInfoData bluetoothInfo;
  @Deprecated public com.iot.data.schema.AvailableMemoryInfoData availableMemoryInfo;
  @Deprecated public com.iot.data.schema.CpuInfoData cpuInfo;
  @Deprecated public com.iot.data.schema.UserAgentActionData USER_AGENT_ACTION;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DevInfoContextData() {}

  /**
   * All-args constructor.
   * @param appBuild The new value for appBuild
   * @param device The new value for device
   * @param locale The new value for locale
   * @param location The new value for location
   * @param telephone The new value for telephone
   * @param wifi The new value for wifi
   * @param bluetoothInfo The new value for bluetoothInfo
   * @param availableMemoryInfo The new value for availableMemoryInfo
   * @param cpuInfo The new value for cpuInfo
   * @param USER_AGENT_ACTION The new value for USER_AGENT_ACTION
   */
  public DevInfoContextData(com.iot.data.schema.AppBuildData appBuild, com.iot.data.schema.DeviceData device, com.iot.data.schema.LocaleData locale, com.iot.data.schema.LocationData location, com.iot.data.schema.TelephoneData telephone, java.util.Map<java.lang.String,java.lang.String> wifi, com.iot.data.schema.BluetoothInfoData bluetoothInfo, com.iot.data.schema.AvailableMemoryInfoData availableMemoryInfo, com.iot.data.schema.CpuInfoData cpuInfo, com.iot.data.schema.UserAgentActionData USER_AGENT_ACTION) {
    this.appBuild = appBuild;
    this.device = device;
    this.locale = locale;
    this.location = location;
    this.telephone = telephone;
    this.wifi = wifi;
    this.bluetoothInfo = bluetoothInfo;
    this.availableMemoryInfo = availableMemoryInfo;
    this.cpuInfo = cpuInfo;
    this.USER_AGENT_ACTION = USER_AGENT_ACTION;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return appBuild;
    case 1: return device;
    case 2: return locale;
    case 3: return location;
    case 4: return telephone;
    case 5: return wifi;
    case 6: return bluetoothInfo;
    case 7: return availableMemoryInfo;
    case 8: return cpuInfo;
    case 9: return USER_AGENT_ACTION;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: appBuild = (com.iot.data.schema.AppBuildData)value$; break;
    case 1: device = (com.iot.data.schema.DeviceData)value$; break;
    case 2: locale = (com.iot.data.schema.LocaleData)value$; break;
    case 3: location = (com.iot.data.schema.LocationData)value$; break;
    case 4: telephone = (com.iot.data.schema.TelephoneData)value$; break;
    case 5: wifi = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 6: bluetoothInfo = (com.iot.data.schema.BluetoothInfoData)value$; break;
    case 7: availableMemoryInfo = (com.iot.data.schema.AvailableMemoryInfoData)value$; break;
    case 8: cpuInfo = (com.iot.data.schema.CpuInfoData)value$; break;
    case 9: USER_AGENT_ACTION = (com.iot.data.schema.UserAgentActionData)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'appBuild' field.
   * @return The value of the 'appBuild' field.
   */
  public com.iot.data.schema.AppBuildData getAppBuild() {
    return appBuild;
  }

  /**
   * Sets the value of the 'appBuild' field.
   * @param value the value to set.
   */
  public void setAppBuild(com.iot.data.schema.AppBuildData value) {
    this.appBuild = value;
  }

  /**
   * Gets the value of the 'device' field.
   * @return The value of the 'device' field.
   */
  public com.iot.data.schema.DeviceData getDevice() {
    return device;
  }

  /**
   * Sets the value of the 'device' field.
   * @param value the value to set.
   */
  public void setDevice(com.iot.data.schema.DeviceData value) {
    this.device = value;
  }

  /**
   * Gets the value of the 'locale' field.
   * @return The value of the 'locale' field.
   */
  public com.iot.data.schema.LocaleData getLocale() {
    return locale;
  }

  /**
   * Sets the value of the 'locale' field.
   * @param value the value to set.
   */
  public void setLocale(com.iot.data.schema.LocaleData value) {
    this.locale = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public com.iot.data.schema.LocationData getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(com.iot.data.schema.LocationData value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'telephone' field.
   * @return The value of the 'telephone' field.
   */
  public com.iot.data.schema.TelephoneData getTelephone() {
    return telephone;
  }

  /**
   * Sets the value of the 'telephone' field.
   * @param value the value to set.
   */
  public void setTelephone(com.iot.data.schema.TelephoneData value) {
    this.telephone = value;
  }

  /**
   * Gets the value of the 'wifi' field.
   * @return The value of the 'wifi' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getWifi() {
    return wifi;
  }

  /**
   * Sets the value of the 'wifi' field.
   * @param value the value to set.
   */
  public void setWifi(java.util.Map<java.lang.String,java.lang.String> value) {
    this.wifi = value;
  }

  /**
   * Gets the value of the 'bluetoothInfo' field.
   * @return The value of the 'bluetoothInfo' field.
   */
  public com.iot.data.schema.BluetoothInfoData getBluetoothInfo() {
    return bluetoothInfo;
  }

  /**
   * Sets the value of the 'bluetoothInfo' field.
   * @param value the value to set.
   */
  public void setBluetoothInfo(com.iot.data.schema.BluetoothInfoData value) {
    this.bluetoothInfo = value;
  }

  /**
   * Gets the value of the 'availableMemoryInfo' field.
   * @return The value of the 'availableMemoryInfo' field.
   */
  public com.iot.data.schema.AvailableMemoryInfoData getAvailableMemoryInfo() {
    return availableMemoryInfo;
  }

  /**
   * Sets the value of the 'availableMemoryInfo' field.
   * @param value the value to set.
   */
  public void setAvailableMemoryInfo(com.iot.data.schema.AvailableMemoryInfoData value) {
    this.availableMemoryInfo = value;
  }

  /**
   * Gets the value of the 'cpuInfo' field.
   * @return The value of the 'cpuInfo' field.
   */
  public com.iot.data.schema.CpuInfoData getCpuInfo() {
    return cpuInfo;
  }

  /**
   * Sets the value of the 'cpuInfo' field.
   * @param value the value to set.
   */
  public void setCpuInfo(com.iot.data.schema.CpuInfoData value) {
    this.cpuInfo = value;
  }

  /**
   * Gets the value of the 'USER_AGENT_ACTION' field.
   * @return The value of the 'USER_AGENT_ACTION' field.
   */
  public com.iot.data.schema.UserAgentActionData getUSERAGENTACTION() {
    return USER_AGENT_ACTION;
  }

  /**
   * Sets the value of the 'USER_AGENT_ACTION' field.
   * @param value the value to set.
   */
  public void setUSERAGENTACTION(com.iot.data.schema.UserAgentActionData value) {
    this.USER_AGENT_ACTION = value;
  }

  /**
   * Creates a new DevInfoContextData RecordBuilder.
   * @return A new DevInfoContextData RecordBuilder
   */
  public static com.iot.data.schema.DevInfoContextData.Builder newBuilder() {
    return new com.iot.data.schema.DevInfoContextData.Builder();
  }

  /**
   * Creates a new DevInfoContextData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DevInfoContextData RecordBuilder
   */
  public static com.iot.data.schema.DevInfoContextData.Builder newBuilder(com.iot.data.schema.DevInfoContextData.Builder other) {
    return new com.iot.data.schema.DevInfoContextData.Builder(other);
  }

  /**
   * Creates a new DevInfoContextData RecordBuilder by copying an existing DevInfoContextData instance.
   * @param other The existing instance to copy.
   * @return A new DevInfoContextData RecordBuilder
   */
  public static com.iot.data.schema.DevInfoContextData.Builder newBuilder(com.iot.data.schema.DevInfoContextData other) {
    return new com.iot.data.schema.DevInfoContextData.Builder(other);
  }

  /**
   * RecordBuilder for DevInfoContextData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DevInfoContextData>
    implements org.apache.avro.data.RecordBuilder<DevInfoContextData> {

    private com.iot.data.schema.AppBuildData appBuild;
    private com.iot.data.schema.AppBuildData.Builder appBuildBuilder;
    private com.iot.data.schema.DeviceData device;
    private com.iot.data.schema.DeviceData.Builder deviceBuilder;
    private com.iot.data.schema.LocaleData locale;
    private com.iot.data.schema.LocaleData.Builder localeBuilder;
    private com.iot.data.schema.LocationData location;
    private com.iot.data.schema.LocationData.Builder locationBuilder;
    private com.iot.data.schema.TelephoneData telephone;
    private com.iot.data.schema.TelephoneData.Builder telephoneBuilder;
    private java.util.Map<java.lang.String,java.lang.String> wifi;
    private com.iot.data.schema.BluetoothInfoData bluetoothInfo;
    private com.iot.data.schema.BluetoothInfoData.Builder bluetoothInfoBuilder;
    private com.iot.data.schema.AvailableMemoryInfoData availableMemoryInfo;
    private com.iot.data.schema.AvailableMemoryInfoData.Builder availableMemoryInfoBuilder;
    private com.iot.data.schema.CpuInfoData cpuInfo;
    private com.iot.data.schema.CpuInfoData.Builder cpuInfoBuilder;
    private com.iot.data.schema.UserAgentActionData USER_AGENT_ACTION;
    private com.iot.data.schema.UserAgentActionData.Builder USER_AGENT_ACTIONBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.iot.data.schema.DevInfoContextData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.appBuild)) {
        this.appBuild = data().deepCopy(fields()[0].schema(), other.appBuild);
        fieldSetFlags()[0] = true;
      }
      if (other.hasAppBuildBuilder()) {
        this.appBuildBuilder = com.iot.data.schema.AppBuildData.newBuilder(other.getAppBuildBuilder());
      }
      if (isValidValue(fields()[1], other.device)) {
        this.device = data().deepCopy(fields()[1].schema(), other.device);
        fieldSetFlags()[1] = true;
      }
      if (other.hasDeviceBuilder()) {
        this.deviceBuilder = com.iot.data.schema.DeviceData.newBuilder(other.getDeviceBuilder());
      }
      if (isValidValue(fields()[2], other.locale)) {
        this.locale = data().deepCopy(fields()[2].schema(), other.locale);
        fieldSetFlags()[2] = true;
      }
      if (other.hasLocaleBuilder()) {
        this.localeBuilder = com.iot.data.schema.LocaleData.newBuilder(other.getLocaleBuilder());
      }
      if (isValidValue(fields()[3], other.location)) {
        this.location = data().deepCopy(fields()[3].schema(), other.location);
        fieldSetFlags()[3] = true;
      }
      if (other.hasLocationBuilder()) {
        this.locationBuilder = com.iot.data.schema.LocationData.newBuilder(other.getLocationBuilder());
      }
      if (isValidValue(fields()[4], other.telephone)) {
        this.telephone = data().deepCopy(fields()[4].schema(), other.telephone);
        fieldSetFlags()[4] = true;
      }
      if (other.hasTelephoneBuilder()) {
        this.telephoneBuilder = com.iot.data.schema.TelephoneData.newBuilder(other.getTelephoneBuilder());
      }
      if (isValidValue(fields()[5], other.wifi)) {
        this.wifi = data().deepCopy(fields()[5].schema(), other.wifi);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bluetoothInfo)) {
        this.bluetoothInfo = data().deepCopy(fields()[6].schema(), other.bluetoothInfo);
        fieldSetFlags()[6] = true;
      }
      if (other.hasBluetoothInfoBuilder()) {
        this.bluetoothInfoBuilder = com.iot.data.schema.BluetoothInfoData.newBuilder(other.getBluetoothInfoBuilder());
      }
      if (isValidValue(fields()[7], other.availableMemoryInfo)) {
        this.availableMemoryInfo = data().deepCopy(fields()[7].schema(), other.availableMemoryInfo);
        fieldSetFlags()[7] = true;
      }
      if (other.hasAvailableMemoryInfoBuilder()) {
        this.availableMemoryInfoBuilder = com.iot.data.schema.AvailableMemoryInfoData.newBuilder(other.getAvailableMemoryInfoBuilder());
      }
      if (isValidValue(fields()[8], other.cpuInfo)) {
        this.cpuInfo = data().deepCopy(fields()[8].schema(), other.cpuInfo);
        fieldSetFlags()[8] = true;
      }
      if (other.hasCpuInfoBuilder()) {
        this.cpuInfoBuilder = com.iot.data.schema.CpuInfoData.newBuilder(other.getCpuInfoBuilder());
      }
      if (isValidValue(fields()[9], other.USER_AGENT_ACTION)) {
        this.USER_AGENT_ACTION = data().deepCopy(fields()[9].schema(), other.USER_AGENT_ACTION);
        fieldSetFlags()[9] = true;
      }
      if (other.hasUSERAGENTACTIONBuilder()) {
        this.USER_AGENT_ACTIONBuilder = com.iot.data.schema.UserAgentActionData.newBuilder(other.getUSERAGENTACTIONBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing DevInfoContextData instance
     * @param other The existing instance to copy.
     */
    private Builder(com.iot.data.schema.DevInfoContextData other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.appBuild)) {
        this.appBuild = data().deepCopy(fields()[0].schema(), other.appBuild);
        fieldSetFlags()[0] = true;
      }
      this.appBuildBuilder = null;
      if (isValidValue(fields()[1], other.device)) {
        this.device = data().deepCopy(fields()[1].schema(), other.device);
        fieldSetFlags()[1] = true;
      }
      this.deviceBuilder = null;
      if (isValidValue(fields()[2], other.locale)) {
        this.locale = data().deepCopy(fields()[2].schema(), other.locale);
        fieldSetFlags()[2] = true;
      }
      this.localeBuilder = null;
      if (isValidValue(fields()[3], other.location)) {
        this.location = data().deepCopy(fields()[3].schema(), other.location);
        fieldSetFlags()[3] = true;
      }
      this.locationBuilder = null;
      if (isValidValue(fields()[4], other.telephone)) {
        this.telephone = data().deepCopy(fields()[4].schema(), other.telephone);
        fieldSetFlags()[4] = true;
      }
      this.telephoneBuilder = null;
      if (isValidValue(fields()[5], other.wifi)) {
        this.wifi = data().deepCopy(fields()[5].schema(), other.wifi);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bluetoothInfo)) {
        this.bluetoothInfo = data().deepCopy(fields()[6].schema(), other.bluetoothInfo);
        fieldSetFlags()[6] = true;
      }
      this.bluetoothInfoBuilder = null;
      if (isValidValue(fields()[7], other.availableMemoryInfo)) {
        this.availableMemoryInfo = data().deepCopy(fields()[7].schema(), other.availableMemoryInfo);
        fieldSetFlags()[7] = true;
      }
      this.availableMemoryInfoBuilder = null;
      if (isValidValue(fields()[8], other.cpuInfo)) {
        this.cpuInfo = data().deepCopy(fields()[8].schema(), other.cpuInfo);
        fieldSetFlags()[8] = true;
      }
      this.cpuInfoBuilder = null;
      if (isValidValue(fields()[9], other.USER_AGENT_ACTION)) {
        this.USER_AGENT_ACTION = data().deepCopy(fields()[9].schema(), other.USER_AGENT_ACTION);
        fieldSetFlags()[9] = true;
      }
      this.USER_AGENT_ACTIONBuilder = null;
    }

    /**
      * Gets the value of the 'appBuild' field.
      * @return The value.
      */
    public com.iot.data.schema.AppBuildData getAppBuild() {
      return appBuild;
    }

    /**
      * Sets the value of the 'appBuild' field.
      * @param value The value of 'appBuild'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setAppBuild(com.iot.data.schema.AppBuildData value) {
      validate(fields()[0], value);
      this.appBuildBuilder = null;
      this.appBuild = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'appBuild' field has been set.
      * @return True if the 'appBuild' field has been set, false otherwise.
      */
    public boolean hasAppBuild() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'appBuild' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.AppBuildData.Builder getAppBuildBuilder() {
      if (appBuildBuilder == null) {
        if (hasAppBuild()) {
          setAppBuildBuilder(com.iot.data.schema.AppBuildData.newBuilder(appBuild));
        } else {
          setAppBuildBuilder(com.iot.data.schema.AppBuildData.newBuilder());
        }
      }
      return appBuildBuilder;
    }

    /**
     * Sets the Builder instance for the 'appBuild' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setAppBuildBuilder(com.iot.data.schema.AppBuildData.Builder value) {
      clearAppBuild();
      appBuildBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'appBuild' field has an active Builder instance
     * @return True if the 'appBuild' field has an active Builder instance
     */
    public boolean hasAppBuildBuilder() {
      return appBuildBuilder != null;
    }

    /**
      * Clears the value of the 'appBuild' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearAppBuild() {
      appBuild = null;
      appBuildBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'device' field.
      * @return The value.
      */
    public com.iot.data.schema.DeviceData getDevice() {
      return device;
    }

    /**
      * Sets the value of the 'device' field.
      * @param value The value of 'device'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setDevice(com.iot.data.schema.DeviceData value) {
      validate(fields()[1], value);
      this.deviceBuilder = null;
      this.device = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'device' field has been set.
      * @return True if the 'device' field has been set, false otherwise.
      */
    public boolean hasDevice() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'device' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.DeviceData.Builder getDeviceBuilder() {
      if (deviceBuilder == null) {
        if (hasDevice()) {
          setDeviceBuilder(com.iot.data.schema.DeviceData.newBuilder(device));
        } else {
          setDeviceBuilder(com.iot.data.schema.DeviceData.newBuilder());
        }
      }
      return deviceBuilder;
    }

    /**
     * Sets the Builder instance for the 'device' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setDeviceBuilder(com.iot.data.schema.DeviceData.Builder value) {
      clearDevice();
      deviceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'device' field has an active Builder instance
     * @return True if the 'device' field has an active Builder instance
     */
    public boolean hasDeviceBuilder() {
      return deviceBuilder != null;
    }

    /**
      * Clears the value of the 'device' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearDevice() {
      device = null;
      deviceBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'locale' field.
      * @return The value.
      */
    public com.iot.data.schema.LocaleData getLocale() {
      return locale;
    }

    /**
      * Sets the value of the 'locale' field.
      * @param value The value of 'locale'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setLocale(com.iot.data.schema.LocaleData value) {
      validate(fields()[2], value);
      this.localeBuilder = null;
      this.locale = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'locale' field has been set.
      * @return True if the 'locale' field has been set, false otherwise.
      */
    public boolean hasLocale() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'locale' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.LocaleData.Builder getLocaleBuilder() {
      if (localeBuilder == null) {
        if (hasLocale()) {
          setLocaleBuilder(com.iot.data.schema.LocaleData.newBuilder(locale));
        } else {
          setLocaleBuilder(com.iot.data.schema.LocaleData.newBuilder());
        }
      }
      return localeBuilder;
    }

    /**
     * Sets the Builder instance for the 'locale' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setLocaleBuilder(com.iot.data.schema.LocaleData.Builder value) {
      clearLocale();
      localeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'locale' field has an active Builder instance
     * @return True if the 'locale' field has an active Builder instance
     */
    public boolean hasLocaleBuilder() {
      return localeBuilder != null;
    }

    /**
      * Clears the value of the 'locale' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearLocale() {
      locale = null;
      localeBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public com.iot.data.schema.LocationData getLocation() {
      return location;
    }

    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setLocation(com.iot.data.schema.LocationData value) {
      validate(fields()[3], value);
      this.locationBuilder = null;
      this.location = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'location' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.LocationData.Builder getLocationBuilder() {
      if (locationBuilder == null) {
        if (hasLocation()) {
          setLocationBuilder(com.iot.data.schema.LocationData.newBuilder(location));
        } else {
          setLocationBuilder(com.iot.data.schema.LocationData.newBuilder());
        }
      }
      return locationBuilder;
    }

    /**
     * Sets the Builder instance for the 'location' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setLocationBuilder(com.iot.data.schema.LocationData.Builder value) {
      clearLocation();
      locationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'location' field has an active Builder instance
     * @return True if the 'location' field has an active Builder instance
     */
    public boolean hasLocationBuilder() {
      return locationBuilder != null;
    }

    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearLocation() {
      location = null;
      locationBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'telephone' field.
      * @return The value.
      */
    public com.iot.data.schema.TelephoneData getTelephone() {
      return telephone;
    }

    /**
      * Sets the value of the 'telephone' field.
      * @param value The value of 'telephone'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setTelephone(com.iot.data.schema.TelephoneData value) {
      validate(fields()[4], value);
      this.telephoneBuilder = null;
      this.telephone = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'telephone' field has been set.
      * @return True if the 'telephone' field has been set, false otherwise.
      */
    public boolean hasTelephone() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'telephone' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.TelephoneData.Builder getTelephoneBuilder() {
      if (telephoneBuilder == null) {
        if (hasTelephone()) {
          setTelephoneBuilder(com.iot.data.schema.TelephoneData.newBuilder(telephone));
        } else {
          setTelephoneBuilder(com.iot.data.schema.TelephoneData.newBuilder());
        }
      }
      return telephoneBuilder;
    }

    /**
     * Sets the Builder instance for the 'telephone' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setTelephoneBuilder(com.iot.data.schema.TelephoneData.Builder value) {
      clearTelephone();
      telephoneBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'telephone' field has an active Builder instance
     * @return True if the 'telephone' field has an active Builder instance
     */
    public boolean hasTelephoneBuilder() {
      return telephoneBuilder != null;
    }

    /**
      * Clears the value of the 'telephone' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearTelephone() {
      telephone = null;
      telephoneBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'wifi' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getWifi() {
      return wifi;
    }

    /**
      * Sets the value of the 'wifi' field.
      * @param value The value of 'wifi'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setWifi(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[5], value);
      this.wifi = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'wifi' field has been set.
      * @return True if the 'wifi' field has been set, false otherwise.
      */
    public boolean hasWifi() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'wifi' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearWifi() {
      wifi = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'bluetoothInfo' field.
      * @return The value.
      */
    public com.iot.data.schema.BluetoothInfoData getBluetoothInfo() {
      return bluetoothInfo;
    }

    /**
      * Sets the value of the 'bluetoothInfo' field.
      * @param value The value of 'bluetoothInfo'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setBluetoothInfo(com.iot.data.schema.BluetoothInfoData value) {
      validate(fields()[6], value);
      this.bluetoothInfoBuilder = null;
      this.bluetoothInfo = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'bluetoothInfo' field has been set.
      * @return True if the 'bluetoothInfo' field has been set, false otherwise.
      */
    public boolean hasBluetoothInfo() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'bluetoothInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.BluetoothInfoData.Builder getBluetoothInfoBuilder() {
      if (bluetoothInfoBuilder == null) {
        if (hasBluetoothInfo()) {
          setBluetoothInfoBuilder(com.iot.data.schema.BluetoothInfoData.newBuilder(bluetoothInfo));
        } else {
          setBluetoothInfoBuilder(com.iot.data.schema.BluetoothInfoData.newBuilder());
        }
      }
      return bluetoothInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'bluetoothInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setBluetoothInfoBuilder(com.iot.data.schema.BluetoothInfoData.Builder value) {
      clearBluetoothInfo();
      bluetoothInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'bluetoothInfo' field has an active Builder instance
     * @return True if the 'bluetoothInfo' field has an active Builder instance
     */
    public boolean hasBluetoothInfoBuilder() {
      return bluetoothInfoBuilder != null;
    }

    /**
      * Clears the value of the 'bluetoothInfo' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearBluetoothInfo() {
      bluetoothInfo = null;
      bluetoothInfoBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'availableMemoryInfo' field.
      * @return The value.
      */
    public com.iot.data.schema.AvailableMemoryInfoData getAvailableMemoryInfo() {
      return availableMemoryInfo;
    }

    /**
      * Sets the value of the 'availableMemoryInfo' field.
      * @param value The value of 'availableMemoryInfo'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setAvailableMemoryInfo(com.iot.data.schema.AvailableMemoryInfoData value) {
      validate(fields()[7], value);
      this.availableMemoryInfoBuilder = null;
      this.availableMemoryInfo = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'availableMemoryInfo' field has been set.
      * @return True if the 'availableMemoryInfo' field has been set, false otherwise.
      */
    public boolean hasAvailableMemoryInfo() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'availableMemoryInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.AvailableMemoryInfoData.Builder getAvailableMemoryInfoBuilder() {
      if (availableMemoryInfoBuilder == null) {
        if (hasAvailableMemoryInfo()) {
          setAvailableMemoryInfoBuilder(com.iot.data.schema.AvailableMemoryInfoData.newBuilder(availableMemoryInfo));
        } else {
          setAvailableMemoryInfoBuilder(com.iot.data.schema.AvailableMemoryInfoData.newBuilder());
        }
      }
      return availableMemoryInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'availableMemoryInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setAvailableMemoryInfoBuilder(com.iot.data.schema.AvailableMemoryInfoData.Builder value) {
      clearAvailableMemoryInfo();
      availableMemoryInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'availableMemoryInfo' field has an active Builder instance
     * @return True if the 'availableMemoryInfo' field has an active Builder instance
     */
    public boolean hasAvailableMemoryInfoBuilder() {
      return availableMemoryInfoBuilder != null;
    }

    /**
      * Clears the value of the 'availableMemoryInfo' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearAvailableMemoryInfo() {
      availableMemoryInfo = null;
      availableMemoryInfoBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'cpuInfo' field.
      * @return The value.
      */
    public com.iot.data.schema.CpuInfoData getCpuInfo() {
      return cpuInfo;
    }

    /**
      * Sets the value of the 'cpuInfo' field.
      * @param value The value of 'cpuInfo'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setCpuInfo(com.iot.data.schema.CpuInfoData value) {
      validate(fields()[8], value);
      this.cpuInfoBuilder = null;
      this.cpuInfo = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'cpuInfo' field has been set.
      * @return True if the 'cpuInfo' field has been set, false otherwise.
      */
    public boolean hasCpuInfo() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'cpuInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.CpuInfoData.Builder getCpuInfoBuilder() {
      if (cpuInfoBuilder == null) {
        if (hasCpuInfo()) {
          setCpuInfoBuilder(com.iot.data.schema.CpuInfoData.newBuilder(cpuInfo));
        } else {
          setCpuInfoBuilder(com.iot.data.schema.CpuInfoData.newBuilder());
        }
      }
      return cpuInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'cpuInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setCpuInfoBuilder(com.iot.data.schema.CpuInfoData.Builder value) {
      clearCpuInfo();
      cpuInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'cpuInfo' field has an active Builder instance
     * @return True if the 'cpuInfo' field has an active Builder instance
     */
    public boolean hasCpuInfoBuilder() {
      return cpuInfoBuilder != null;
    }

    /**
      * Clears the value of the 'cpuInfo' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearCpuInfo() {
      cpuInfo = null;
      cpuInfoBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'USER_AGENT_ACTION' field.
      * @return The value.
      */
    public com.iot.data.schema.UserAgentActionData getUSERAGENTACTION() {
      return USER_AGENT_ACTION;
    }

    /**
      * Sets the value of the 'USER_AGENT_ACTION' field.
      * @param value The value of 'USER_AGENT_ACTION'.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder setUSERAGENTACTION(com.iot.data.schema.UserAgentActionData value) {
      validate(fields()[9], value);
      this.USER_AGENT_ACTIONBuilder = null;
      this.USER_AGENT_ACTION = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'USER_AGENT_ACTION' field has been set.
      * @return True if the 'USER_AGENT_ACTION' field has been set, false otherwise.
      */
    public boolean hasUSERAGENTACTION() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'USER_AGENT_ACTION' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.iot.data.schema.UserAgentActionData.Builder getUSERAGENTACTIONBuilder() {
      if (USER_AGENT_ACTIONBuilder == null) {
        if (hasUSERAGENTACTION()) {
          setUSERAGENTACTIONBuilder(com.iot.data.schema.UserAgentActionData.newBuilder(USER_AGENT_ACTION));
        } else {
          setUSERAGENTACTIONBuilder(com.iot.data.schema.UserAgentActionData.newBuilder());
        }
      }
      return USER_AGENT_ACTIONBuilder;
    }

    /**
     * Sets the Builder instance for the 'USER_AGENT_ACTION' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.iot.data.schema.DevInfoContextData.Builder setUSERAGENTACTIONBuilder(com.iot.data.schema.UserAgentActionData.Builder value) {
      clearUSERAGENTACTION();
      USER_AGENT_ACTIONBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'USER_AGENT_ACTION' field has an active Builder instance
     * @return True if the 'USER_AGENT_ACTION' field has an active Builder instance
     */
    public boolean hasUSERAGENTACTIONBuilder() {
      return USER_AGENT_ACTIONBuilder != null;
    }

    /**
      * Clears the value of the 'USER_AGENT_ACTION' field.
      * @return This builder.
      */
    public com.iot.data.schema.DevInfoContextData.Builder clearUSERAGENTACTION() {
      USER_AGENT_ACTION = null;
      USER_AGENT_ACTIONBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public DevInfoContextData build() {
      try {
        DevInfoContextData record = new DevInfoContextData();
        if (appBuildBuilder != null) {
          record.appBuild = this.appBuildBuilder.build();
        } else {
          record.appBuild = fieldSetFlags()[0] ? this.appBuild : (com.iot.data.schema.AppBuildData) defaultValue(fields()[0]);
        }
        if (deviceBuilder != null) {
          record.device = this.deviceBuilder.build();
        } else {
          record.device = fieldSetFlags()[1] ? this.device : (com.iot.data.schema.DeviceData) defaultValue(fields()[1]);
        }
        if (localeBuilder != null) {
          record.locale = this.localeBuilder.build();
        } else {
          record.locale = fieldSetFlags()[2] ? this.locale : (com.iot.data.schema.LocaleData) defaultValue(fields()[2]);
        }
        if (locationBuilder != null) {
          record.location = this.locationBuilder.build();
        } else {
          record.location = fieldSetFlags()[3] ? this.location : (com.iot.data.schema.LocationData) defaultValue(fields()[3]);
        }
        if (telephoneBuilder != null) {
          record.telephone = this.telephoneBuilder.build();
        } else {
          record.telephone = fieldSetFlags()[4] ? this.telephone : (com.iot.data.schema.TelephoneData) defaultValue(fields()[4]);
        }
        record.wifi = fieldSetFlags()[5] ? this.wifi : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[5]);
        if (bluetoothInfoBuilder != null) {
          record.bluetoothInfo = this.bluetoothInfoBuilder.build();
        } else {
          record.bluetoothInfo = fieldSetFlags()[6] ? this.bluetoothInfo : (com.iot.data.schema.BluetoothInfoData) defaultValue(fields()[6]);
        }
        if (availableMemoryInfoBuilder != null) {
          record.availableMemoryInfo = this.availableMemoryInfoBuilder.build();
        } else {
          record.availableMemoryInfo = fieldSetFlags()[7] ? this.availableMemoryInfo : (com.iot.data.schema.AvailableMemoryInfoData) defaultValue(fields()[7]);
        }
        if (cpuInfoBuilder != null) {
          record.cpuInfo = this.cpuInfoBuilder.build();
        } else {
          record.cpuInfo = fieldSetFlags()[8] ? this.cpuInfo : (com.iot.data.schema.CpuInfoData) defaultValue(fields()[8]);
        }
        if (USER_AGENT_ACTIONBuilder != null) {
          record.USER_AGENT_ACTION = this.USER_AGENT_ACTIONBuilder.build();
        } else {
          record.USER_AGENT_ACTION = fieldSetFlags()[9] ? this.USER_AGENT_ACTION : (com.iot.data.schema.UserAgentActionData) defaultValue(fields()[9]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
